@model EmployeeRegistrationApp.Models.EmployeeDetails

@{
    ViewBag.Title = "Edit";
}



<script>
    window.onload = function () {
        var State = document.getElementById("State");
        var dob = document.getElementById("Dob");
        var Gender = document.getElementById("Gender");
        State.classList.add("form-control");
        dob.classList.add("form-control");
        Gender.classList.add("form-control");
    }

</script>

<div class="card card-primary">
    <div class="card-header">
        <h3 class="card-title">Edit Employee Details</h3>
    </div>
    <!-- /.card-header -->
    <!-- form start -->

    @using (Html.BeginForm("Edit", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="card-body">
            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <table>
                    <tr>
                        <td width="150px">
                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label" })

                        </td>
                        <td>
                            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        </td>
                        <td width="100px">
                        </td>
                        <td width="150px">
                            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>

                            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @*@Html.EditorFor(model => model.Dob,new { htmlAttributes = new { @class = "form-control" } })*@
                            <div class="input-group date" id="dob" data-target-input="nearest">
                                @Html.TextBoxFor(model => model.Dob,"{0:yyyy-MM-dd}", new { @class = "form-control datetimepicker-input", data_target = "#dob" })
                                <div class="input-group-append" data-target="#dob" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>

                                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                            </div>
                        </td>
                        <td width="100px">
                        </td>
                        <td>

                            @Html.LabelFor(model => model.Contactno, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Contactno, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Contactno, "", new { @class = "text-danger" })

                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                        </td>
                        <td width="100px">
                        </td>
                        <td>

                            @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })

                        </td>
                        <td>
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </td>
                        <td width="100px">
                        </td>
                        <td>

                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.DropDownList("State", "-Select-")
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
                        </td>
                        <td width="100px">
                        </td>
                        <td>
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                </table>
            </div>

            <div class="form-group">
                @Html.Hidden("EmpID", Model.EmpID)
                @Html.Hidden("CreatedOn", Model.CreatedOn)
                @Html.Hidden("ModifiedOn", DateTime.Now)
            </div>


            <hr />
            <center>
                <div class="row">
                    <div class="col-md-1">
                        <input type="submit" value="Update" class="btn btn-primary" />
                    </div>


                    <div class="col-md-2">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </center>
        </div>
    }

</div>
